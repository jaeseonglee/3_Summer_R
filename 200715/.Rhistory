re1 <- n1 + n2
re1 <- n1 + n2
n1 <- 5
n2 <- 3
re1 <- n1 + n2
re1 <- n1 - n2
re1 <- n1 * n2
re1 <- n1 / n2
re1 <- n1 %/% n2
re1 <- n1 %% n2
re1 <- n1 ** n2
re1 <- n1 ^ n2
re1 <- 2 ** (1/2)
re1 <- sqrt(2)
n1 <- 5
n2 <- 3
re1 <- n1 + n2
re1 <- n1 - n2
re1 <- n1 * n2
re1 <- n1 / n2
re1 <- n1 %/% n2
re1 <- n1 %% n2
re1 <- n1 ** n2
re1 <- n1 ^ n2
re1 <- 2 ** (1/2)
re1 <- sqrt(2)
re1 <- abs(-2)
re1 <- 10 ** 10
re1 < 2*10**10
re1 <-2e-10
re1 <- n1 + n2    # re1 = 8
re1 <- n1 / n2    #
re1 <- n1 %/% n2  #
re1 <- n1 %% n2   # 2
re1 <- n1 ** n2   #
re1 <- n1 ^ n2
re1 <- 2 ** (1/2) #
re1 <- sqrt(2)    # 루트 2
re1 <- abs(-2)    # 2
re1 <- 10 ** 10   #
re1 < 2*10**10    #
re1 < 2*10**10    # 1e + 10
re1 <- 2 * 10**10    # 1e + 10
re1 <- 2e - 10    #
re1 <- 2 * 10**10 # 2e + 10
re1 <- 2e - 10    # 2e + 10
re1 <- 2 * 10**10 # 2e + 10
re1 <- 2e - 10    # 2e + 10
re1 <- 2e-10    # 2e + 10
re1 <- 2 * 10**10 # 2e + 10
re1 <- 2e-10    # 2e + 10
re1 <- 2e-10    # 2e + 10
re1 <- 2e-10      # 2e+10
re1 <- 2e- 10      # 2e+10
# 2
n1 <- 5           # 5
n2 <- -3          # -3
re1 <- n1 == n2   #
re1 <- n1 == n2   # FALSE
re1 <- n1 != n2   #
re1 <- n1 != n2   # TRUE
re1 <- n1 > n2    #
re1 <- n1 >= n2   #
re1 <- n1 < n2    # FALSE
# 3
re1 <- n1 >= 0 & n2 >= 0
# 3
re1 <- n1 >= 0 & n2 >= 0   # FALSE
re1 <- n1 >= 0 | n2 >= 0   # FALSE
re1 <- n1 >= 0 | n2 >= 0   # TRUE
re1 <- !(n1 < n2) #
xor(T,T)
xor(T,T)
xor(T,T)          # FALSE
xor(T,T)          # FALSE
xor(F,T)          # TRUE
xor(T,F)          # TRUE
xor(F,T)          # FALSE
xor(F,F)          # FALSE
xor(T,F)          # TRUE
xor(T,F)          # TRUE
xor(T,T)          # FALSE
xor(F,T)          # TRUE
xor(T,F)          # TRUE
xor(F,F)          # FALSE
a <- c(1,0,2)     #
a | b             # FLASE
b <- c(0,1,3)     # 0 1 3
a | b             #
a & b             # FALSE
a & b             # FALSE FLASE TRUE
a || b            # TRUE
a && b            # FALSE
a <- c(1,0,2)     # 1 0 2
b <- c(0,1,3)     # 0 1 3
a | b             # TRUE TRUE TRUE
a & b             # FALSE FLASE TRUE
a || b            # TRUE
a && b            # FALSE
# 4
condition <- 1    # 1
condition <- 1    # 1
x <- 100          #
if(condition == TRUE)
printf("Heoll world!")
condition <- 1    # 1
x <- 100          #
if(condition == TRUE)
print("Heoll world!")
1 | 2
1 | 1
1 | 0
1 & 2
1 & 1
1 & 0
# 4_2
if(x > 90) {
print("more than 100")
} else{
printf("less than 100")
}
# 4_3
n1 <- 95
# 4_3
n1 <- 95
if(n1 > 90) {
cat('A')
} else if ( n1 > 80) {
cat('B')
} else {
cat('C')
}
# 4_4
v1 <- c(95,80,95,65,99)
# 4_4
v1 <- c(95,80,95,65,99)
ifelse(v1 >90, 'A', 'B')
ifelse(v1 >90, 'A', ifelse(v1>80,'B','C'))
v1 <- c(95,80,95,65,99)
ifelse(v1 > 90, 'A', 'B')
ifelse(v1 > 90, 'A', ifelse(v1 > 80,'B','C'))
# 5
switch(  )
# 5
switch(EXPR = 2,5,6,7)
# 5
switch(EXPR = 2,5,6,7)
n1 <- 95
if(n1 > 90) {
cat('A')
} else if ( n1 > 80) {
cat('B')
} else {
cat('C')
}
ifelse(v1 > 90, 'A', 'B')
ifelse(v1 > 90, 'A', ifelse(v1 > 80,'B','C'))  #
switch('B',A = '1', B='2')      #
switch('a', A =,a='1', B='2') #
# 6
which(c(12:55) == 13)
if(length(which( c('루피','뽀로로','크롱') == '포비')) == 0)
cat('값이 없습니다.')
switch(EXPR = 2,5,6,7)        # 6
switch('B', A = '1', B='2')   # 2
switch('a', A =,a='1', B='2') # 1
# 5
switch(EXPR = 2,5,6,7)        # 6
switch('B', A = '1', B='2')   # 2
# 5
switch(EXPR = 2,5,6,7)        # 6
# 5
switch(EXPR = 2,5,6,7)        # 6
# 5
switch(EXPR = 2,5,6,7)        # 6
# 5
switch(EXPR = 2,5,6,7)        # 6
# 5
switch(EXPR = 2,5,6,7)        # 6
# 5
switch(EXPR = 2,5,6,7)        # 6
# 5
switch(EXPR = 2,5,6,7)        # 6
# 5
switch(EXPR = 2,5,6,7)        # 6
# 6
which(c(12:55) == 13)                           #
# 6
which(c(12:55) == 13)                           # 2
which(c('루피','뽀로로','크롱') == '뽀로로')    #
which(c('루피','뽀로로','크롱') == '포비')
which(c('루피','뽀로로','크롱') == '포비')      # 0
if(length(which( c('루피','뽀로로','크롱') == '포비')) == 0)
cat('값이 없습니다.')
# 7
v1 <- c(95,80,95,65,99)
for(kk in v1)
{
if(kk %% 2 == 0) #짝수
{
break
}else{
print(kk)
}
}
for (kk in v1)
{
print(kk)
}
#7_2
for(kk in v1)
{
if(kk > 90){
cat(kk,":",'A',"\n")
}else if (kk >80)
{
cat(kk,":",'B',"\n")
}else
{
cat(kk,":",'C',"\n")
}
}
# 7_3
for(kk in v1)
{
if(kk %% 2 == 0) #짝수
{
break
}else{
print(kk)
}
}
# 7_4
for(kk in v1)
{
if(kk %% 2 == 0)
{
next  #skip
}else{
print(kk)
}
}
# 7_5
for (kk in 2:9)
{
cat('----', kk, '------','\n')
for (jj in 1:9)
{
cat(kk,'x',jj,'=', kk*jj,'\n')
}
}
# 7_5
# 구구단 출력력
for (kk in 2:9)
{
cat('----', kk, '------','\n')
for (jj in 1:9)
{
cat(kk,'x',jj,'=', kk*jj,'\n')
}
}
# 8
v1 <- c(95,80,95,65,99)
idx <- 0
while(idx < length(v1))
{
idx <- idx+1
if(v1[idx] %% 2 == 0)
{
next  #skip
}else{
print(v1[idx])
}
}
# 9
v1 <- c(95,80,95,65,99)
idx <- 0
repeat{
if(idx >= length(v1))
break
idx <- idx+1
if(v1[idx] %% 2 == 0)
{
next  #skip
}else{
print(v1[idx])
}
}
# 10
for(n in 101:200) {
sum <- sum +n
}
# 10
sum <- 0
for(n in 101:200) {
sum <- sum +n
}
sum
sum
# 10
sum <- 0
for(n in 101:200) {
sum <- sum +n
}
sum
sum <- 0
n <- 101
while(n < 200){
sum <- sum + n
n <- n + 1
}
sum
# 10
sum <- 0
for(n in 101:200) {
sum <- sum +n
}
sum
sum <- 0
n <- 101
while(n < 200){
sum <- sum + n
n <- n + 1
}
sum
sum <- 0
n <- 101
while(n <= 200){
sum <- sum + n
n <- n + 1
}
sum
sum <- 0
n <- 101
repeat{
if(n > 200)
break
sum <- sum + n
n <- n + 1
}
sum
# 10
# for
sum <- 0
for(n in 101:200) {
sum <- sum +n
}
sum
# while
sum <- 0
n <- 101
while(n <= 200){
sum <- sum + n
n <- n + 1
}
sum
# repeat
sum <- 0
n <- 101
repeat{
if(n > 200)
break
sum <- sum + n
n <- n + 1
}
sum
# 8
v1 <- c(95,80,95,65,99)
idx <- 0
while(idx < length(v1))
{
idx <- idx+1
if(v1[idx] %% 2 == 0)
{
next  #skip
}else{
print(v1[idx])
}
}
# 9
v1 <- c(95,80,95,65,99)
# 9
v1 <- c(95,80,95,65,99)
idx <- 0
repeat{
if(idx >= length(v1))
break
idx <- idx+1
if(v1[idx] %% 2 == 0)
{
next  #skip
} else {
print(v1[idx])
}
}
# 10
# for
sum <- 0
for(n in 101:200) {
sum <- sum +n
}
for(n in 101:200) {
sum <- sum +n
}
sum
sum
# 10
# for
sum <- 0
for(n in 101:200) {
sum <- sum +n
}
sum
for(n in 101:200) {
sum <- sum +n
}
sum
for(n in 101:200) {
sum <- sum +n
}
sum
# 10
# for
sum <- 0
# 10
# for
sum <- 0
for(n in 101:200) {
if(n %% 2 == 0)
sum <- sum +n
}
sum
# 10
# for
oddSum <- 0
for(n in 101:200) {
if(n %% 2 == 0)
sum <- sum +n
}
# while
oddSum <- 0
n <- 101
while(n <= 200){
if(n %% 2 == 1)
oddSum <- oddSum + n
n <- n + 1
}
oddSum
# repeat
oddSum <- 0
n <- 101
repeat{
if(n > 200)
break
if(n %% 2 == 1)
oddSum <- oddSum + n
n <- n + 1
}
oddSum
oddSum <- 0
for(n in 101:200) {
if(n %% 2 == 1)
oddSum <- oddSum +n
}
oddSum
# while
oddSum <- 0
n <- 101
while(n <= 200){
if(n %% 2 == 1)
oddSum <- oddSum + n
n <- n + 1
}
oddSum
oddSum <- 0
n <- 101
repeat{
if(n > 200)
break
if(n %% 2 == 1)
oddSum <- oddSum + n
n <- n + 1
}
oddSum
oddSum
